services:
  app1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: finance_api_1
    restart: always
    depends_on:
      - db
    expose:
      - "8080"
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs

  app2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: finance_api_2
    restart: always
    depends_on:
      - db
    expose:
      - "8080"
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs

  app3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: finance_api_3
    restart: always
    depends_on:
      - db
    expose:
      - "8080"
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs

  db:
    image: postgres:17
    container_name: finance_db
    restart: always
    ports:
      - "5433:5432"
    env_file:
      - .env
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      # - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data

  nginx:
    image: nginx:stable
    container_name: finance_nginx
    ports:
      - "81:80"
      - "444:443"
    volumes:
      - ./deploy/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./deploy/nginx/ssl:/etc/nginx/ssl
      - ./logs:/var/log/nginx
    depends_on:
      - app1
      - app2
      - app3

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6380:6379"


volumes:
  postgres_data: